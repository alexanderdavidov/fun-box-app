{"version":3,"sources":["components/Placemarks.js","components/Polylines.js","components/ListPlacemarks.js","App.js","serviceWorker.js","index.js","imgs/CloseButton.svg"],"names":["placemarks","props","arrayPoints","length","i","push","template","react_default","a","createElement","react_yandex_maps_umd_production_min","modules","onBalloonOpen","onBalloonOpenPlacemark","onDragEnd","onDragEndPlacemark","options","draggable","zIndexDrag","balloonContentLayout","key","geometry","split","polylines","geometryArray","interactiveZIndex","balloonCloseButton","strokeColor","strokeWidth","strokeOpacity","listPlacemarks","itemFromPlacemarksArray","arrayOfNumbers","liPlacemarks","_loop","Number","toFixed","join","className","onDragOver","onDragStart","e","concat","keyimg","onClick","onClickCloseButton","src","CloseButton","alt","App","state","ymaps","mapCenterDefault","inputValue","createTemplateLayoutFactory","_this","setState","templateLayoutFactory","createClass","handleChange","event","target","value","handleSubmit","arrayOfInputSigns","inputValueCopy","eightyFiveDegree","oneHundredEightyDegree","preventDefault","replace","splice","some","isNaN","slice","prevState","Object","toConsumableArray","alert","arrayPointsCopy","newCoordinates","String","get","getCoordinates","indexInArray","_options","objectSpread","index","itemFromArray","getAttribute","draggedItem","dataTransfer","effectAllowed","setData","parentNode","setDragImage","draggedOverItem","filter","item","draggedIdx","react","onSubmit","this","type","onChange","autoFocus","ListPlacemarks","onLoad","center","zoom","Placemarks","Polylines","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.faefcc38.chunk.js","sourcesContent":["// import React from 'react';\n// import { Placemark  } from 'react-yandex-maps';\n//\n// const placemarks = (props) => {\n//     let placemarks = [];\n//     if (props.arrayPoints.length !== 0) {\n//       for (let i = 0; i < props.arrayPoints.length; i++) {\n//         placemarks.push(<Placemark\n//           modules={['geoObject.addon.balloon', 'geoObject.addon.hint']}\n//           onDragEnd={props.onDragEndPlacemark}\n//           options={{\n//             draggable: true,\n//             zIndexDrag: i,\n//             balloonContentLayout: '<h1>Hey</h3>'\n//           }}\n//           key={i}\n//           geometry={props.arrayPoints[i].split(',')} />);\n//       }\n//     }\n//     return (placemarks);\n// }\n//\n// export default placemarks;\n\n\nimport React from 'react';\nimport { Placemark  } from 'react-yandex-maps';\n\nconst placemarks = (props) => {\n    let placemarks = [];\n    if (props.arrayPoints.length !== 0) {\n      for (let i = 0; i < props.arrayPoints.length; i++) {\n        placemarks.push(props.template && (<Placemark\n          modules={['geoObject.addon.balloon']}\n          onBalloonOpen={props.onBalloonOpenPlacemark}\n          onDragEnd={props.onDragEndPlacemark}\n          options={{\n            draggable: true,\n            zIndexDrag: i,\n            balloonContentLayout: props.template\n          }}\n          key={i}\n          geometry={props.arrayPoints[i].split(',')} />));\n      }\n    }\n    return (placemarks);\n}\n\nexport default placemarks;\n","import React from 'react';\nimport { Polyline  } from 'react-yandex-maps';\n\nconst polylines = (props) => {\n    let geometryArray = [];\n    if (props.arrayPoints.length !== 0) {\n      for (let i = 0; i < props.arrayPoints.length; i++) {\n        geometryArray.push(props.arrayPoints[i].split(','));\n      }\n    }\n    return (\n      <Polyline\n        geometry={geometryArray}\n        options={{\n          interactiveZIndex: true,\n          draggable: true,\n          balloonCloseButton: false,\n          strokeColor: '#0000FF',\n          strokeWidth: 2,\n          strokeOpacity: 1,\n        }}\n      />\n    );\n}\n\nexport default polylines;\n","// import React from 'react';\n// import CloseButton from '../imgs/CloseButton.svg';\n//\n// const listPlacemarks = (props) => {\n//     let itemFromPlacemarksArray, arrayOfNumbers;\n//     let liPlacemarks = [];\n//\n//     if (props.arrayPoints.length !== 0) {\n//       for (let i = 0; i < props.arrayPoints.length; i++) {\n//         itemFromPlacemarksArray = props.arrayPoints[i];\n//         arrayOfNumbers = itemFromPlacemarksArray.split(',');\n//         arrayOfNumbers = [Number(arrayOfNumbers[0]).toFixed(3), Number(arrayOfNumbers[1]).toFixed(3)];\n//         itemFromPlacemarksArray = arrayOfNumbers.join(', ');\n//         liPlacemarks.push(\n//           <div key={i} className='LiWrapper'>\n//             <li>{`Точка ${i+1}: ${itemFromPlacemarksArray}`}</li>\n//             <img keyimg={i} onClick={props.onClickCloseButton} className='Close' src={CloseButton} alt='Close Button' />\n//           </div>\n//         );\n//       }\n//     }\n//\n//     return (\n//       <ul>{liPlacemarks}</ul>\n//     );\n// }\n//\n// export default listPlacemarks;\nimport React from 'react';\nimport CloseButton from '../imgs/CloseButton.svg';\n\nconst listPlacemarks = (props) =>  {\n  let itemFromPlacemarksArray, arrayOfNumbers;\n  let liPlacemarks = [];\n  if (props.arrayPoints.length !== 0) {\n    for (let i = 0; i < props.arrayPoints.length; i++) {\n      itemFromPlacemarksArray = props.arrayPoints[i];\n      arrayOfNumbers = itemFromPlacemarksArray.split(',');\n      arrayOfNumbers = [Number(arrayOfNumbers[0]).toFixed(3), Number(arrayOfNumbers[1]).toFixed(3)];\n      itemFromPlacemarksArray = arrayOfNumbers.join(', ');\n      liPlacemarks.push(\n        <div key={i} className='LiWrapper' onDragOver={() => props.onDragOver(i)}>\n          <li\n            className=\"drag\"\n            draggable\n            onDragStart={e => props.onDragStart(e, i)}\n            onDragEnd={props.onDragEnd}\n            >{`Точка ${i+1}: ${itemFromPlacemarksArray}`}</li>\n            <img keyimg={i} onClick={props.onClickCloseButton} className='Close' src={CloseButton} alt='Close Button' />\n        </div>\n      );\n    }\n  }\n  return (\n    <ul>{liPlacemarks}</ul>\n  );\n\n}\n\nexport default listPlacemarks;\n","import React, { Component, Fragment } from 'react';\nimport { YMaps, Map } from 'react-yandex-maps';\nimport Placemarks from './components/Placemarks';\nimport Polylines from './components/Polylines';\nimport ListPlacemarks from './components/ListPlacemarks';\nimport './App.css';\n\nclass App extends Component {\n\n  state = {\n    ymaps: '',\n    template: null,\n    mapCenterDefault: [55.75, 37.57],\n    inputValue: '',\n    arrayPoints: [],\n  }\n\n  createTemplateLayoutFactory = (ymaps) => {\n    if (ymaps && !this.state.template) {\n      this.setState({\n        template: ymaps.templateLayoutFactory.createClass(\n          `<h3>Точка 0</h3>`\n        ),\n        ymaps: ymaps\n        });\n      }\n  };\n\n\n  handleChange = (event) => {\n    this.setState({inputValue: event.target.value});\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    let arrayOfInputSigns, inputValueCopy, eightyFiveDegree, oneHundredEightyDegree;\n\n    inputValueCopy = this.state.inputValue.replace(/ +/g, \"\");\n\n    arrayOfInputSigns = inputValueCopy.split('');\n\n    arrayOfInputSigns[0] === '-' ? arrayOfInputSigns.splice(0,1) : arrayOfInputSigns.splice(0,0);\n    arrayOfInputSigns[7] === '-' ? arrayOfInputSigns.splice(7,1) : arrayOfInputSigns.splice(0,0);\n    arrayOfInputSigns[8] === '-' ? arrayOfInputSigns.splice(8,1) : arrayOfInputSigns.splice(0,0);\n\n    if (\n      arrayOfInputSigns[2] === '.' &&\n      arrayOfInputSigns[6] === ',' &&\n      arrayOfInputSigns[10] === '.' &&\n      arrayOfInputSigns.length === 14\n    ) {\n\n      arrayOfInputSigns.splice(2, 1);\n      arrayOfInputSigns.splice(5, 1);\n      arrayOfInputSigns.splice(8, 1);\n\n      if (!arrayOfInputSigns.some(isNaN)) {\n\n        eightyFiveDegree = arrayOfInputSigns.slice(0, 2);\n        eightyFiveDegree = Number(eightyFiveDegree.join(''));\n        oneHundredEightyDegree = arrayOfInputSigns.slice(5, 8);\n        oneHundredEightyDegree = Number(oneHundredEightyDegree.join(''));\n\n\n        if (this.state.arrayPoints.length < 8 && eightyFiveDegree < 85 && oneHundredEightyDegree <= 180) {\n          this.setState(prevState => ({\n            arrayPoints: [...prevState.arrayPoints, inputValueCopy],\n            inputValue: ''\n          }));\n        } else {\n          alert('Можно внести не более 8 точек на карту.');\n        }\n\n\n      }\n    } else {\n      alert('Пожалуйста введите число следующего формата: 00.000,000.000 - где первое число широта, второе долгота. Диапазон широты в Яндекс Картах (-85, 85). Диапазон долготы в Яндекс Картах [-180, 180]. Пример 1: 55.750, 037.570. Пример 2: -55.750, -037.570.');\n    }\n\n\n  }\n\n  onDragEndPlacemark = (event) => {\n    let arrayPointsCopy = [...this.state.arrayPoints];\n    let newCoordinates = String(event.get('target').geometry.getCoordinates());\n    let indexInArray = event.get('target').options._options.zIndexDrag;\n    arrayPointsCopy.splice(indexInArray, 1, newCoordinates);\n    this.setState({arrayPoints: arrayPointsCopy});\n  }\n\n  onBalloonOpenPlacemark = (event) => {\n    let arrayOfNumbers = [];\n    let ymaps = {...this.state.ymaps}\n    let arrayPointsCopy = [...this.state.arrayPoints];\n    let index = event.get('target').options._options.zIndexDrag;\n    let itemFromArray = arrayPointsCopy[index];\n    arrayOfNumbers = itemFromArray.split(',');\n    arrayOfNumbers = [Number(arrayOfNumbers[0]).toFixed(3), Number(arrayOfNumbers[1]).toFixed(3)];\n    itemFromArray = arrayOfNumbers.join(', ');\n    this.setState({\n      template: ymaps.templateLayoutFactory.createClass(`<h3>Точка: ${index + 1}. Координаты: ${itemFromArray}.</h3>`)\n    });\n  }\n\n  onClickCloseButton = (event) => {\n    let arrayPointsCopy = [...this.state.arrayPoints];\n    arrayPointsCopy.splice(event.target.getAttribute('keyimg'), 1);\n    this.setState({arrayPoints: arrayPointsCopy});\n  }\n\n  onDragStart = (e, index) => {\n    this.draggedItem = this.state.arrayPoints[index];\n    e.dataTransfer.effectAllowed = \"move\";\n    e.dataTransfer.setData(\"text/html\", e.target.parentNode);\n    e.dataTransfer.setDragImage(e.target.parentNode, 10, 10);\n  };\n\n  onDragOver = index => {\n    const draggedOverItem = this.state.arrayPoints[index];\n    if (this.draggedItem === draggedOverItem) {\n      return;\n    }\n    let arrayPoints = this.state.arrayPoints.filter(item => item !== this.draggedItem);\n    arrayPoints.splice(index, 0, this.draggedItem);\n    this.setState({ arrayPoints });\n  };\n\n  onDragEnd = () => {\n    this.draggedIdx = null;\n  };\n\n\n  render() {\n    return (\n      <Fragment>\n\n        <div className=\"FormWrapper\">\n          <form onSubmit={this.handleSubmit}>\n            <h1>Пожалуйста введите координаты</h1>\n            <label>\n              <div className='Circle'></div> <br/>\n              <input type=\"text\" value={this.state.inputValue} onChange={this.handleChange} autoFocus />\n            </label>\n          </form>\n        </div>\n\n        <div className=\"WrapperListAndMap\">\n          <ListPlacemarks\n          onDragStart={this.onDragStart}\n          onDragOver={this.onDragOver}\n          onDragEnd={this.onDragEnd}\n          arrayPoints={this.state.arrayPoints}\n          onClickCloseButton={this.onClickCloseButton} />\n          <YMaps>\n            <Map className=\"Map\"\n            modules={['templateLayoutFactory']}\n            onLoad={this.createTemplateLayoutFactory}\n            state={{\n              center: this.state.arrayPoints.length > 0 ?\n              this.state.arrayPoints[this.state.arrayPoints.length - 1].split(',') :\n              this.state.mapCenterDefault,\n              zoom: 14}}>\n              <Placemarks\n                onBalloonOpenPlacemark={this.onBalloonOpenPlacemark}\n                template={this.state.template}\n                onDragEndPlacemark={this.onDragEndPlacemark}\n                arrayPoints={this.state.arrayPoints} />\n              <Polylines arrayPoints={this.state.arrayPoints} />\n            </Map>\n          </YMaps>\n\n        </div>\n\n      </Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/CloseButton.3cfc7846.svg\";"],"sourceRoot":""}